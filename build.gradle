plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
}

group = 'org.mikeneck'
version = '0.2.1'

repositories {
    jcenter()
}

dependencies {
    compileOnly 'org.jetbrains:annotations:18.0.0'
    testImplementation 'junit:junit:4.12'
}

gradlePlugin {
    plugins {
        graalvmNativeImage {
            id = 'org.mikeneck.graalvm-native-image'
            implementationClass = 'org.mikeneck.graalvm.GraalvmNativeImagePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/mike-neck/graalvm-native-image-plugin'
    vcsUrl = 'https://github.com/mike-neck/graalvm-native-image-plugin'
    description = 'Generates native image via GraalVM'
    tags = ['graalvm', 'native-image']
    plugins {
        graalvmNativeImage {
            displayName = 'GraalVM Native Image Plugin'
        }
    }
}

sourceSets {
    functionalTest {
        
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test, dependsOn: ['clean']) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.compileFunctionalTestJava.dependsOn('pluginDescriptors')

check {
    dependsOn(tasks.functionalTest)
}
