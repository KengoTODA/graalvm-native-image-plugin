name: Run Gradle Tests

on:
  push:
    paths-ignore:
      - '.github/**'
      - 'example/**'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      
      - name: Set up Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '8'

      - name: Cache gradle
        id: gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Run Tests with Gradle
        run: ./gradlew clean spotlessCheck test --continue

      - name: Store reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-report
          path: build/reports/tests/test

  functionalTest:
    runs-on: ubuntu-18.04
    needs: test
    strategy:
      matrix:
        graal:
          - 20.2.0
          - 20.3.0
          - 21.0.0
        javaVersion:
          - java8
          - java11
        nativeImage:
          - installed
          - "uninstalled"
        exclude:
          - graal: 20.3.0
            javaVersion: java8
          - graal: 20.2.0
            javaVersion: java11
    name: "test ${{ matrix.graal }}.${{ matrix.javaVersion }}(native-image: ${{ matrix.nativeImage }})"
    if: contains( github.ref , 'refs/heads/release' ) == false

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@8bbfe44ef9c6f5c07e5af036a1bffd561c037d18
        with:
          graalvm-version: "${{ matrix.graal }}.${{ matrix.javaVersion }}"

      - name: show gu command
        run: |
          which gu
          echo $JAVA_HOME

      - name: Install GraalVM native-image
        run: gu install native-image
        if: "startsWith(matrix.nativeImage, 'installed')"

      - name: Cache gradle
        id: gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Build Cache
        id: build-cache
        uses: actions/cache@v2
        with:
          path: .cache
          key: build-${{ hashFiles('src/functionalTest/**/*.java') }}
          restore-keys: build-

      - name: Run functional test
        run: ./gradlew clean functionalTest

      - name: Store reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-report-${{ matrix.graal }}-${{ matrix.javaVersion }}-${{ matrix.nativeImage }}
          path: build/reports/tests/functionalTest
